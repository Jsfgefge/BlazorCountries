@page "/"
@using BlazorCountries.Data
@inject ICountriesService CountriesService
@inject NavigationManager NavigationManager

<h3>Countries List</h3>

<SfGrid @ref="FirstGrid"
        DataSource="@countries"
        AllowSorting="true"
        AllowResizing="true"
        AllowFiltering="true"
        AllowPaging="true"
        AllowReordering="true"
        AllowExcelExport="true"
        ContextMenuItems="@(new List<object>() { "AutoFit", "AutoFitAll", "SortAscending", "SortDescending","Copy", "ExcelExport", "CsvExport", "FirstPage", "PrevPage","LastPage", "NextPage"})"
        Toolbar="Toolbaritems">
    <GridPageSettings PageSize="5"></GridPageSettings>
    <GridEvents OnToolbarClick="ToolbarClickHandler" TValue="Countries"></GridEvents>
    <GridColumns>
        <GridColumn Field="@nameof(Countries.CountryId)"
                    HeaderText="Country Id"
                    TextAlign="@TextAlign.Left"
                    Width="20">
        </GridColumn>
        <GridColumn Field="@nameof(Countries.CountryName)"
                    HeaderText="Country Name"
                    TextAlign="@TextAlign.Left"
                    Width="90">
        </GridColumn>
    </GridColumns>
</SfGrid>

@code {
    private List<ItemModel> Toolbaritems = new List<ItemModel>();
    private SfGrid<Countries> FirstGrid;
    private int? CountryID;


    // Create an empty list, named countries, of empty Counties objects.
    IEnumerable<Countries> countries;

    protected override async Task OnInitializedAsync() {
        //Populate the list of countries objects from the Countries table.
        countries = await CountriesService.CountriesGetAll();
        Toolbaritems.Add(new ItemModel() { Text = "Add", TooltipText = "Add a new country", PrefixIcon = "e-add" });
        Toolbaritems.Add(new ItemModel() { Text = "Edit", TooltipText = "Edit selected country", PrefixIcon = "e-edit" });
        Toolbaritems.Add(new ItemModel() { Text = "Delete", TooltipText = "Delete selected country", PrefixIcon = "e-delete" });
    }

    public async Task ExcelExport() {
        await this.FirstGrid.ExcelExport();
    }

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args) {
        if (args.Item.Text == "Add") {
            CountryID = 0;
            NavigationManager.NavigateTo($"/countriesaddedit/{CountryID}");
        }
        if (args.Item.Text == "Edit") {
            //Code for editing
        }
        if (args.Item.Text == "Delete") {
            //Code for deleting
        }
    }

}
